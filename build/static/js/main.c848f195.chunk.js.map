{"version":3,"sources":["components/header.js","redux/helpers/Services/Toast.js","redux/helpers/Services/API.js","redux/helpers/constants/constants.js","redux/helpers/Services/Leaderboard.js","redux/actions/leaderboard.js","pages/Leaderboard.js","pages/AddUser.js","App.js","reportWebVitals.js","redux/reducers/leaderboard.js","redux/reducers/rootReducer.js","redux/storeConfig/store.js","index.js"],"names":["Header","className","to","Toast","Success","response","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Error","error","Add","data","statusCode","Update","Get","APIError","API","axios","create","baseURL","validateStatus","status","maxRedirects","interceptors","request","use","config","headers","Authorization","localStorage","getItem","JSON","parse","token","method","console","group","url","info","stringify","groupEnd","Promise","reject","message","match","removeItem","controller","Leaderboard","List","get","then","Create","UpdateById","payload","put","Delete","body","a","post","id","delete","LeaderboardPage","props","counterUpdate","type","state","index","findIndex","f","points","setState","updateRecordtoDB","pointChange","value","deleteRecord","isDeleting","deleteAndUpdate","res","getAllUsers","this","leaderboard","scope","map","item","participantName","location","selectedDate","substring","units","onClick","onChange","$event","target","role","React","Component","connect","users","params","dispatch","formSchema","Yup","shape","required","min","AddUser","validateOnChange","initialValues","validationSchema","onSubmit","values","setStatus","setSubmitting","resetForm","render","form","errors","handleSubmit","isSubmitting","touched","handleChange","handleBlur","setFieldTouched","setFieldValue","setFieldError","for","name","placeholder","classNameName","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","LeaderboardReducer","action","rootReducer","combineReducers","middlewares","thunk","createDebounce","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c848f195.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Leader Board</Link>\r\n            <Link className=\"navbar-brand\" to=\"/add-user\">Add User</Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import { toast } from \"react-toastify\"\r\n\r\nexport const Toast = {\r\n    Success,\r\n    Error,\r\n    Add,\r\n    Update,\r\n    Get,\r\n    APIError,\r\n};\r\n\r\nfunction Success(response) {\r\n    toast.success(response, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    })\r\n\r\n}\r\nfunction Error(response) {\r\n    toast.error(response, {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    })\r\n\r\n}\r\n\r\nfunction Get(response) {\r\n    if (response.data.statusCode === 200) {\r\n        return response.data.data;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nfunction Add(response) {\r\n    if (response.data.statusCode === 200) {\r\n        toast.success(\"Data adding\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n        return response.data.data;\r\n    }\r\n    else {\r\n        toast.error(\"Something went wrong. Please try again\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n}\r\nfunction Update(response) {\r\n    if (response.data.statusCode === 200) {\r\n        toast.success(\"Data updating\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n        return response;\r\n    }\r\n    else {\r\n        toast.error(\"Something went wrong. Please try again\", {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n}\r\n\r\nfunction APIError(response) {\r\n    toast.error(\"Something went wrong. Please try again\", {\r\n        position: \"top-right\",\r\n        autoClose: 3000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    })\r\n}\r\n","import axios from \"axios\";\r\nimport { constants } from \"../constants/constants\"\r\nimport { Toast } from \"./Toast\";\r\n\r\nconst API = axios.create({\r\n    baseURL: `${constants.apiUrl}`,\r\n    validateStatus: function (status) {\r\n        return status < 500; // Reject only if the status code is greater than or equal to 500\r\n    },\r\n    maxRedirects: 5,\r\n});\r\n\r\nAPI.interceptors.request.use((config) => {\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem('userObj') ? JSON.parse(localStorage.getItem('userObj')).token : null}`;\r\n    if (config.method === \"post\" || config.method === \"put\") {\r\n        console.group(config.url);\r\n        console.info(JSON.stringify(config.data, null, 2));\r\n        console.groupEnd();\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\nAPI.interceptors.response.use((response) => {\r\n    if (response.config.method === \"post\" || response.config.method === \"put\") {\r\n        console.group(response.config.url);\r\n        console.info(JSON.stringify(response.data, null, 2));\r\n        console.groupEnd();\r\n    }\r\n    else if (response.config.method === \"get\") {\r\n        console.group(response.config.url);\r\n        console.info(response.data);\r\n        console.groupEnd();\r\n    }\r\n    if (response.config.parse) {\r\n        //perform the manipulation here and change the response object\r\n    }\r\n    if (response.data['status_code'] == 402 && (response.data.message[0].match('Token Expired') || response.data.message[0].match('Token Invalid'))) {\r\n        Toast.Error(response.data.message[0]);\r\n        localStorage.removeItem('userObj');\r\n    }\r\n    return response;\r\n}, (error) => {\r\n    return Promise.reject(error.message);\r\n});\r\nexport default API","export const constants = {\r\n  apiUrl: 'https://leaderboard-dipixels.herokuapp.com/api/',\r\n}\r\n","import API from './API';\r\nconst controller = `user`;\r\n\r\nexport const Leaderboard = {\r\n    List,\r\n    Create,\r\n    UpdateById,\r\n    Delete,\r\n};\r\nfunction List() {\r\n    return API.get(`${controller}/get`).then(response => {\r\n        return response;\r\n    }, error => {\r\n    });\r\n}\r\n\r\nasync function Create(body) {\r\n    return API.post(`${controller}/create`, body).then(response => {\r\n        return response;\r\n    }, error => {\r\n    });\r\n}\r\n\r\nasync function Delete(id) {\r\n    return API.delete(`${controller}/delete/${id}`).then(response => {\r\n        return response.data;\r\n    }, error => {\r\n    });\r\n}\r\nfunction UpdateById(payload) {\r\n    return API.put(`${controller}/UpdateById`, payload).then(response => {\r\n        return response;\r\n    }, error => {\r\n    });\r\n}","import { Leaderboard } from '../helpers/Services/Leaderboard';\r\n\r\n\r\nexport const getAllUsers = params => {\r\n    return async dispatch => {\r\n        return await Leaderboard.List().then(res => {\r\n            let response = res.data;\r\n            if (response.success === 200) {\r\n                dispatch({\r\n                    type: \"GET_ALL_USERS\",\r\n                    payload: response.payload\r\n                })\r\n                return response.payload;\r\n            }\r\n            else {\r\n                dispatch({\r\n                    type: \"GET_ALL_USERS\",\r\n                    payload: []\r\n                })\r\n                return [];\r\n            }\r\n        });\r\n    }\r\n}\r\nexport const deleteAndUpdate = params => {\r\n    return async dispatch => {\r\n        return await Leaderboard.Delete(params).then(res => {\r\n            let response = res;\r\n            if (response.success === 200) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { getAllUsers, deleteAndUpdate } from \"../redux/actions/leaderboard\";\r\nimport { Toast } from \"../redux/helpers/Services/Toast\";\r\nimport { Leaderboard } from '../redux/helpers/Services/Leaderboard';\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass LeaderboardPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: this.props.leaderboard ?? [],\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        let data = await this.props.getAllUsers();\r\n        this.setState({ data: data })\r\n    }\r\n    counterUpdate = (type, id) => {\r\n        debugger\r\n        let { data } = this.state;\r\n        let index = data.findIndex(f => f.id === id);\r\n        if (type === 'decrease') {\r\n            data[index].points--;\r\n        }\r\n        else if (type === 'increase') {\r\n            data[index].points++;\r\n        }\r\n        this.setState({ data: data });\r\n        this.updateRecordtoDB(id, data[index].points);\r\n    }\r\n    pointChange = (value, id) => {\r\n        debugger\r\n        let { data } = this.state;\r\n        let index = data.findIndex(f => f.id === id);\r\n        data[index].points = value;\r\n        this.setState({ data: data });\r\n        this.updateRecordtoDB(id, value);\r\n    }\r\n    deleteRecord = async (id) => {\r\n        let { data } = this.state;\r\n        let index = data.findIndex(f => f.id === id);\r\n        data[index].isDeleting = true;\r\n        this.setState({ data: data });\r\n        this.props.deleteAndUpdate(id).then(async res => {\r\n            if (res) {\r\n                let data = await this.props.getAllUsers();\r\n                this.setState({ data: data });\r\n                toast.success(\"Delete Successfully!\")\r\n            }\r\n        });\r\n    }\r\n    updateRecordtoDB = async (id, points) => {\r\n        let payload = {\r\n            id: id,\r\n            points: points\r\n        }\r\n        Leaderboard.UpdateById(payload).then(res => {\r\n            debugger\r\n            if (res.data.success === 200) {\r\n                toast.success(res.data.message);\r\n            }\r\n            else {\r\n                toast.error(res.data.message);\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        let { data } = this.state;\r\n        return (<div className=\"container\">\r\n            <table className=\"table\" >\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Participent Name</th>\r\n                        <th scope=\"col\">Location</th>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Units</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Points</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((item, index) => {\r\n                        return (\r\n                            <tr key={item.id}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.participantName}</td>\r\n                                <td>{item.location}</td>\r\n                                <td>{item.selectedDate.substring(0, 10)}</td>\r\n                                <td>{item.units}</td>\r\n                                <td>{item.type}</td>\r\n                                <td>\r\n                                    <div className=\"container\">\r\n                                        <button className=\"btn btn-danger\" onClick={() => this.counterUpdate('decrease', item.id)}>-</button>\r\n                                        <input type=\"text\" value={item.points} onChange={($event) => this.pointChange(+$event.target.value, item.id)} />\r\n                                        <button className=\"btn btn-success\" onClick={() => this.counterUpdate('increase', item.id)}>+</button>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    {item.isDeleting ? <div className=\"spinner-border\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div> :\r\n                                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.deleteRecord(item.id)}>\r\n                                            Delete\r\n                                        </button>\r\n                                    }\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>);\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        leaderboard: state.leaderboard.users,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAllUsers, deleteAndUpdate })(LeaderboardPage);\r\n","\r\nimport React from \"react\";\r\nimport { Toast } from \"../redux/helpers/Services/Toast\";\r\nimport { Leaderboard } from '../redux/helpers/Services/Leaderboard';\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\"\r\n\r\nconst formSchema = Yup.object().shape({\r\n    \"participantName\": Yup.string().required(\"Required\"),\r\n    \"location\": Yup.string().required(\"Required\"),\r\n    \"units\": Yup.string().required(\"Required\"),\r\n    \"type\": Yup.string().required(\"Required\"),\r\n    \"points\": Yup.string().required(\"Required\").min(0, \"to short\"),\r\n    \"selectedDate\": Yup.string().required(\"Required\"),\r\n})\r\nclass AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n        };\r\n    }\r\n    render() {\r\n        return (<Formik\r\n            validateOnChange={true}\r\n            initialValues={{\r\n                \"participantName\": \"\",\r\n                \"location\": \"\",\r\n                \"units\": \"\",\r\n                \"type\": \"\",\r\n                \"points\": \"\",\r\n                \"selectedDate\": \"\"\r\n            }}\r\n\r\n            validationSchema={formSchema}\r\n            onSubmit={(values, { setStatus, setSubmitting, resetForm }) => {\r\n                Leaderboard.Create(values).then(res => {\r\n                    setSubmitting(false);\r\n                    if (res.data.success) {\r\n                        Toast.Success(res.data.message);\r\n                    }\r\n                    else {\r\n                        Toast.Error(res.data.message);\r\n                    }\r\n                    // resetForm();\r\n                })\r\n            }}\r\n            render={({ form, errors, handleSubmit, status, touched, isSubmitting, values, handleChange, handleBlur, setFieldTouched, setFieldValue, setFieldError }) => {\r\n\r\n                return (<form onSubmit={handleSubmit}>\r\n                    <div className=\"container\">\r\n                        <div className=\"card\" >\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Add New Player</h5>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"form-group\">\r\n                                    <label for=\"inputAddress\">Participent Name *</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"participantName\" value={values.participantName} onChange={handleChange} id=\"participantName\" placeholder=\"Enter Participent Name\" />\r\n                                    <span className=\"error\">{errors.participantName}</span>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-6\">\r\n                                        <label for=\"inputPassword4\">Location *</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"location\" value={values.location} onChange={handleChange} id=\"location\" placeholder=\"Enter Location\" />\r\n                                        <span className=\"error\">{errors.location}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group  col-md-6\">\r\n                                        <label for=\"inputEmail4\">Date *</label>\r\n                                        <input type=\"date\" className=\"form-control\" name=\"selectedDate\" value={values.selectedDate} onChange={handleChange} id=\"selectedDate\" placeholder=\"Date\" />\r\n                                        <span className=\"error\">{errors.selectedDate}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputZip\">Unit *</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"units\" value={values.units} onChange={handleChange} id=\"units\" placeholder=\"Enter Unit\" />\r\n                                        <span className=\"error\">{errors.units}</span>\r\n                                    </div>\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputCity\">Type *</label>\r\n                                        <input type=\"text\" className=\"form-control\" name=\"type\" value={values.type} onChange={handleChange} id=\"type\" placeholder=\"Enter Type\" />\r\n                                        <span className=\"error\">{errors.type}</span>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group col-md-4\">\r\n                                        <label for=\"inputZip\">Point *</label>\r\n                                        <input type=\"number\" className=\"form-control\" name=\"points\" value={values.points} onChange={handleChange} id=\"points\" placeholder=\"Enter Point\" />\r\n                                        <span className=\"error\">{errors.points}</span>\r\n                                    </div>\r\n                                </div>\r\n                                {isSubmitting ? <div className=\"spinner-border\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div> :\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                                }\r\n                                {\r\n                                    status &&\r\n                                    <div classNameName={'alert alert-danger'}>{status}</div>\r\n                                }\r\n                                {/* <pre>{JSON.stringify(errors, null, 2)}</pre> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                )\r\n            }}\r\n        />);\r\n\r\n    }\r\n}\r\n\r\nexport default AddUser;\r\n","import React from \"react\";\nimport './App.css';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer } from 'react-toastify';\nimport Header from './components/header';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport LeaderboardPage from \"./pages/Leaderboard\";\nimport AddUser from \"./pages/AddUser\";\n\nfunction App() {\n  return (<Router>\n    <div>\n      <Header />\n      <Switch>\n        <Route path=\"/\" component={LeaderboardPage} exact></Route>\n        <Route path=\"/add-user\" component={AddUser} exact></Route>\n      </Switch>\n    </div>\n    <ToastContainer />\n  </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    users: []\r\n}\r\n\r\nconst LeaderboardReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"GET_ALL_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default LeaderboardReducer\r\n","import { combineReducers } from \"redux\"\r\nimport leaderboard from \"./leaderboard\"\r\n\r\nconst rootReducer = combineReducers({\r\n  leaderboard: leaderboard,\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport createDebounce from \"redux-debounced\"\r\nimport thunk from \"redux-thunk\"\r\nimport rootReducer from \"../reducers/rootReducer\"\r\n\r\nconst middlewares = [thunk, createDebounce()]\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n)\r\n\r\nexport { store }\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/storeConfig/store\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}